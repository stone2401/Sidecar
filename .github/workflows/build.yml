name: 构建便携版应用

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [ published ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: 构建 ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'windows-x86_64'
            os: 'windows-latest'
            target: 'x86_64-pc-windows-msvc'
            arch: 'x64'
          - platform: 'macos-x86_64'
            os: 'macos-latest'
            target: 'x86_64-apple-darwin'
            arch: 'x64'
          - platform: 'macos-aarch64'
            os: 'macos-latest'
            target: 'aarch64-apple-darwin'
            arch: 'arm64'
          - platform: 'linux-x86_64'
            os: 'ubuntu-latest'
            target: 'x86_64-unknown-linux-gnu'
            arch: 'x64'

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 安装 pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: 设置 Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: 安装 Linux 依赖
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Rust 缓存
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: 安装前端依赖
        run: pnpm install

      - name: 构建 Tauri 应用
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__
          releaseName: 'App v__VERSION__'
          releaseBody: '查看资源以下载此版本的便携版应用。'
          releaseDraft: true
          prerelease: false
          args: --target ${{ matrix.target }} --bundles none

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-portable
          path: |
            src-tauri/target/${{ matrix.target }}/release/gui*
            src-tauri/target/${{ matrix.target }}/release/*.exe
            src-tauri/target/${{ matrix.target }}/release/*.app
            !src-tauri/target/${{ matrix.target }}/release/build/
            !src-tauri/target/${{ matrix.target }}/release/deps/
            !src-tauri/target/${{ matrix.target }}/release/.*
          retention-days: 30

  # 创建发布版本（仅在推送到主分支时）
  release:
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 下载所有构建产物
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: 显示下载的文件
        run: ls -la ./artifacts/

      - name: 创建发布版本
        if: github.event_name != 'pull_request'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          body: |
            ## 🚀 新版本发布
            
            ### 📦 下载链接
            - **Windows (x64)**: 下载 `windows-x86_64-portable` 文件
            - **macOS (Intel)**: 下载 `macos-x86_64-portable` 文件  
            - **macOS (Apple Silicon)**: 下载 `macos-aarch64-portable` 文件
            - **Linux (x64)**: 下载 `linux-x86_64-portable` 文件
            
            ### 📋 更新内容
            ${{ github.event.head_commit.message }}
            
            构建时间: ${{ github.event.head_commit.timestamp }}
          files: |
            ./artifacts/**/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}